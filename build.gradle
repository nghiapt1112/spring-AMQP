buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }
//    if (!it.name.startsWith('Android')) {
//        apply plugin: 'java'
//    }


    configurations {
        providedRuntime
        compile.exclude group: 'org.springframework.boot', module: "spring-boot-starter-tomcat"
        compile.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        compile.exclude group: 'org.springframework.boot', module: 'logback-classic'
        compile.exclude module: 'spring-boot-starter-data-mongodb'
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter-undertow')
        compile('org.springframework.boot:spring-boot-starter-amqp')
        compile('org.springframework.cloud:spring-cloud-commons:2.0.1.RELEASE')
        compile("com.nghia.tut.utils:nghia-libraries:1.0")

        compile('org.springframework.boot:spring-boot-starter-log4j2')
        compile('org.springframework.boot:spring-boot-starter-mail')
        compile('com.lmax:disruptor:3.4.0')

        compile("org.springframework.boot:spring-boot-devtools")
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

    tasks.withType(Jar) {
        destinationDir = file("$rootDir/build/nghia_libs")
    }
    version = '0.0.1'

}

project(':ng_consumer') {

}
project(':ng_rabbit_producer') {
//    dependencies {
//        compile('org.springframework.boot:spring-boot-starter-activemq')
//    }
}


project(':ng_user_consumer') {
    dependencies {
        compile ("org.apache.commons:commons-lang3:3.7")
        compile ("commons-io:commons-io:2.6")
    }

}
project(':ng_activemq_producer') {
    dependencies {
        compile('org.springframework.boot:spring-boot-starter-activemq')
//        compile project(':nghia-producer')
    }
}

project(':ng_activemq_consumer') {
    dependencies {
        compile('org.springframework.boot:spring-boot-starter-activemq')
        compile project(':ng_activemq_producer')
    }
}
