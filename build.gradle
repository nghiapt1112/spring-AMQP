buildscript {
    ext {
        springBootVersion = '2.0.3.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories {
        mavenCentral()
        mavenLocal()
    }
//    if (!it.name.startsWith('Android')) {
//        apply plugin: 'java'
//    }
}



subprojects {
    configurations.compile {
//    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.springframework.boot', module: 'logback-classic'
    }


    dependencies {
        compile ('org.springframework.boot:spring-boot-starter-amqp')
        compile ('org.springframework.cloud:spring-cloud-commons:2.0.1.RELEASE')
        compile ("com.nghia.tut.utils:nghia-libraries:1.0") {
            exclude module: 'spring-boot-starter-data-mongodb'
        }

        compile('org.springframework.boot:spring-boot-starter-log4j2')
        compile('org.springframework.boot:spring-boot-starter-mail')
        compile('com.lmax:disruptor:3.4.0')

        compile("org.springframework.boot:spring-boot-devtools")
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

    tasks.withType(Jar) {
        destinationDir = file("$rootDir/build/nghia_libs")
    }
    version = '0.0.1'

}

project(':nghia-consumer') {

}
project(':nghia-producer') {

}

project(':nghia-user-consumer') {
    dependencies {
        compile ("org.apache.commons:commons-lang3:3.7")
        compile ("commons-io:commons-io:2.6")
    }

}